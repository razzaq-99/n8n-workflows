{
  "name": "Calender_Automation",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "545dc66d-c115-4af7-bc3b-0db51ec53078",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        560,
        1500
      ],
      "webhookId": "calendar-ai-agent-webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are a Google Calendar assistant. Today is {{ DateTime.local().setZone('Asia/Karachi').toFormat('cccc, MMMM d, yyyy') }}.\n\n**TIMEZONE CRITICAL: Always use Asia/Karachi**  \nAll events MUST be created using Asia/Karachi timezone (Pakistan Standard Time) only.\n\n---\n\n**TOOLS AVAILABLE – USE ONLY THESE EXACT NAMES:**  \n- Use `Google Calendar - Create Event` to schedule a new meeting or event  \n- Use `Google Calendar - Get Events` to check upcoming events  \n- Use `Google Calendar - Check Availability` to find available time slots  \n- Use `Google Calendar - Update Event` to reschedule or edit an event  \n- Use `Google Calendar - Delete Event` to cancel or delete an event\n\n---\n\n**WHEN USING `Google Calendar - Create Event` TOOL**  \nYou MUST return these fields in tool call:\n\n- `start_date`: ISO timestamp in Asia/Karachi timezone  \n- `end_date`: ISO timestamp in Asia/Karachi timezone  \n- `event_title`: Short name of the event  \n- `event_description`: What the event is about  \n- `location`: Place of the event (optional)\n\n---\n\n**TIME CONVERSION RULES (Asia/Karachi only):**\n\n| User says       | start_date hour |\n|----------------|-----------------|\n| 5 pm           | 17              |\n| 12 pm (noon)   | 12              |\n| 3 pm           | 15              |\n| 8 pm           | 20              |\n| 9 am           | 9               |\n\n---\n\n**DATE CONVERSION RULES (Asia/Karachi only):**\n\n- If user says “today” →  \n  `{{ DateTime.local().setZone('Asia/Karachi') }}`  \n- If user says “tomorrow” →  \n  `{{ DateTime.local().setZone('Asia/Karachi').plus({days: 1}) }}`\n\n---\n\n**EXAMPLES TO FOLLOW EXACTLY:**\n\nUser: \"Schedule dinner tomorrow at 8 pm\"  \nUse:  \n- `start_date`: {{ DateTime.local().setZone('Asia/Karachi').plus({days: 1}).set({hour: 20, minute: 0, second: 0, millisecond: 0}).toISO() }}  \n- `end_date`: {{ DateTime.local().setZone('Asia/Karachi').plus({days: 1}).set({hour: 21, minute: 0, second: 0, millisecond: 0}).toISO() }}\n\n---\n\n**IMPORTANT FINAL RULES:**\n\n1. DO NOT use UTC or other timezones. Use Asia/Karachi only.  \n2. Always return all required fields when calling `Google Calendar - Create Event`  \n3. Do not ask for confirmation — just create the event when requested.  \n4. Never forget the time must be in ISO format like: `2025-07-02T20:00:00.000+05:00`  \n\n---\n\nRespond politely confirming the meeting, and always clearly mention the date and time (with Asia/Karachi label).\n"
        }
      },
      "id": "18df2337-97e4-4f6f-92b9-070326a84412",
      "name": "Calendar AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1100,
        1500
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').item.json.sessionId || 'default-session' }}"
      },
      "id": "39f47c74-7dbd-4def-ac14-91131818a619",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1020,
        1840
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get calendar events. Use start_date and end_date in ISO format (e.g. 2025-06-25T20:00:00.000Z). If no dates specified, shows today's events.",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "primary",
          "cachedResultName": "Primary Calendar"
        },
        "options": {
          "timeMin": "={{ $fromAI('start_date') || DateTime.local().startOf('day').toISO() }}",
          "timeMax": "={{ $fromAI('end_date') || DateTime.local().endOf('day').toISO() }}",
          "singleEvents": true,
          "orderBy": "startTime"
        }
      },
      "id": "fb828e07-960b-466e-9e12-bc5dc23a13c0",
      "name": "Google Calendar - Get Events",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        1360,
        1840
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "t8AFWUC0D3UBNcIs",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "IMMEDIATELY create calendar events. Required: event_title (string), start_date (ISO format), end_date (ISO format). Example: start_date: \"2025-06-25T20:00:00.000Z\"",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "primary",
          "cachedResultName": "Primary Calendar"
        },
        "start": "={{ $fromAI('start_date') || DateTime.local().toISO() }}",
        "end": "={{ $fromAI('end_date') || DateTime.local().plus({hours: 1}).toISO() }}",
        "additionalFields": {
          "description": "={{ $fromAI('event_description') || '' }}",
          "location": "={{ $fromAI('location') || '' }}",
          "summary": "={{ $fromAI('event_title') || 'New Event' }}"
        }
      },
      "id": "01bd294d-c9b2-4144-915b-cae809bae603",
      "name": "Google Calendar - Create Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        1540,
        1840
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "t8AFWUC0D3UBNcIs",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update existing calendar events. Required: event_id. Optional: new_title, new_description, new_start_date (ISO), new_end_date (ISO), new_location.",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "primary",
          "cachedResultName": "Primary Calendar"
        },
        "eventId": "={{ $fromAI('event_id') }}",
        "updateFields": {
          "description": "={{ $fromAI('new_description') }}",
          "end": "={{ $fromAI('new_end_date') }}",
          "location": "={{ $fromAI('new_location') }}",
          "start": "={{ $fromAI('new_start_date') }}",
          "summary": "={{ $fromAI('new_title') }}"
        }
      },
      "id": "5bc7ba8b-b965-4ef7-a4cd-b2d31e613daa",
      "name": "Google Calendar - Update Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1720,
        1820
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "t8AFWUC0D3UBNcIs",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Delete calendar events immediately when requested. Required: event_id (string).",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "primary",
          "cachedResultName": "Primary Calendar"
        },
        "eventId": "={{ $fromAI('event_id') }}",
        "options": {}
      },
      "id": "eb5c9dff-69db-4c21-83fb-9d67012ea32a",
      "name": "Google Calendar - Delete Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1900,
        1820
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "t8AFWUC0D3UBNcIs",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Check availability and find free time slots. Use availability_start and availability_end in ISO format to check for conflicts.",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "primary",
          "cachedResultName": "Primary Calendar"
        },
        "limit": 20,
        "options": {
          "timeMin": "={{ $fromAI('availability_start') || DateTime.local().startOf('day').toISO() }}",
          "timeMax": "={{ $fromAI('availability_end') || DateTime.local().endOf('day').toISO() }}",
          "singleEvents": true,
          "orderBy": "startTime"
        }
      },
      "id": "13ca38ab-ffaf-4029-9e01-98616e944883",
      "name": "Google Calendar - Check Availability",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        1200,
        1840
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "t8AFWUC0D3UBNcIs",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        800,
        1860
      ],
      "id": "bec225f3-16fb-404c-8a41-c4cb2df094e1",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "By8GMNqVV718knle",
          "name": "Mistral Cloud account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar - Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar - Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar - Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar - Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar - Check Availability": {
      "ai_tool": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "285e89df-2f07-4433-bcf3-89475cc59031",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7cac9a7a0a63812e41b1e94b1b69e3ffef7529633b7e9b913fb43b82dc581723"
  },
  "id": "bOmGAi98HwiS9Qg0",
  "tags": [
    {
      "name": "Arthur",
      "id": "8Kb9UiIROLVGoz4k",
      "createdAt": "2025-07-01T09:43:47.862Z",
      "updatedAt": "2025-07-01T09:43:47.862Z"
    }
  ]
}